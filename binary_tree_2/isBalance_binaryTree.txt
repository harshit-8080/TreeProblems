/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */


class Solution {
    
    public int height(TreeNode root) {
        if(root == null){
            return 0;
        }

        int lh = height(root.left);
        int rh = height(root.right);

        return 1 + Math.max(lh,rh);

    }

    public boolean isBalanced(TreeNode root) {
        if(root == null){
            return true;
        }

        int lh = height(root.left);
        int rh = height(root.right);

        if(Math.abs(lh-rh) > 1){
            return false;
        }


        boolean lResult = isBalanced(root.left);
        boolean rResult = isBalanced(root.right);

        if(lResult && rResult){
            return true;
        }
        return false;

    }
}




Input: root = [3,9,20,null,null,15,7]
Output: true

Input: root = [1,2,2,3,3,null,null,4,4]
Output: false